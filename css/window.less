@keyframes flick-opacity {
	from { opacity: 0; }
	to   { opacity: 1; }
}

.window {
	position: absolute;
	z-index: 5;
	
	border-radius: 8px 8px 0 0;
	background: white;
	color: black;

	outline: 2px solid #2e2e2e;

	resize: both;
	overflow: hidden;

	min-height: 150px;
	min-width: 250px;

	filter: drop-shadow(4px 10px 4px rgba(0, 0, 0, 25%));

	animation: flick-opacity 100ms;

	/* options */
	&.has-message-box {
		transition: filter 100ms;
		filter: drop-shadow(4px 10px 4px rgba(0, 0, 0, 25%)) brightness(50%);
	}

	&.rigid {
		resize: none;
		min-height: auto;
		min-width: auto;
	}

	&[data-folded='true'] {
		resize: horizontal;
		min-height: auto !important;
		height: fit-content !important;
		border-radius: 8px;
	}

	/* active windows */
	&:active, &:focus, &.focus {
		z-index: 7;

		.titlebar {
			z-index: 8;
			color: white;
		}
	}

	/* children */

	/* title bar & windows controls */
	& > .titlebar {
		z-index: 6;

		background: #2e2e2e;
		color: rgba(255 255 255 / 80%);

		width: 100%;

		padding: 2px;

		.title {
			/* width: 60%; */
			width: 100%;

			span {
				width: 100%;
				display: flex;
				justify-content: center;
				font-weight: 700;
			}
		}

		/* window controls */
		/*
		.window > .titlebar > * {
			float: left;
		}

		.window > .titlebar > .window-controls {
			width: 25%;
		}
		*/

		.window-controls {
			position: absolute;
			right: 0;
			z-index: 9;

			display: flex;
			flex-direction: row;
			gap: 4px;
			padding-right: 2px;

			.window-control {
				margin-top: 4px;
				height: 12px;
				width: 12px;
				background: #bbb;
				border-radius: 50%;
				display: inline-block;

				&.close {
					background: var(--accent);

					&:hover {
						filter: brightness(85%);
					}
				}

				&.minimize {
					/* 	background: yellow; */
					background: #fdd800;

					&:hover {
						background: #e3c200;
					}
				}

				&.maximize {
					/* 	background: greenyellow; */
					background: #5ac05a;

					&:hover {
						background: #51ac51;
					}
				}
			}
		}
	}

	/* menubar */
	& > .menubar {
		border-bottom: 1px solid lightgrey;
		display: flex;
		flex-direction: row;
		padding-block: 4px;

		& > .menu {
			position: relative;
			display: inline-block;

			& > .menu-title {
				color: black;
				padding: 4px;
			}

			& > .menu-content {
				display: none;

				position: absolute;
				background-color: white;
				min-width: 160px;
				box-shadow: 0 8px 16px 0 rgba(0 0 0 / 0.2);
				z-index: 9;

				border-radius: 0 0 4px 4px;

				padding: 4px;

				flex-direction: column;
				gap: 2px;
				top: 22px;

				& > span:not(.seperator) {
					color: black;
					padding: 4px;
					display: block;
					border-radius: 4px;

					&:hover {
						outline: 1px solid var(--accent);
						background-color: var(--highlight);
					}
				}

				& > span.seperator {
					display: block;
					position: relative;
					left: 0;
					right: 0;
					background: lightgrey;
					height: 1px;
				}
			}

			&:hover {
				& > .menu-title {
					background-color: var(--accent);
				}

				& > .menu-content {
					display: flex;
				}
			}
		}
	}

	& > .content {
		overflow: auto;
		height: 100%;

		/* } .window:not(.no-padding) > .content { */ padding: 4px; /* } */

		* {
			-webkit-user-select: none;
			user-select: none;
		}

		// controls (with less this section will look a lot better than it did before)
		// TODO move everything to the actual controls file
		// TODO support .override on every control

		.writing:not(.override) {
			display: flex;
			flex-direction: column;
			gap: 8px;
		}

		.monospace:not(.override) {
			font-family: var(--font-monospace);
		}

		code.inline:not(.override) {
			font-family: var(--font-monospace);
			border: 1px solid black;
			padding: 4px;
			border-radius: 3px;
		}

		.list > *:not(br):not(.override)::before {
			content: '\2022  ';
		}

		a {
			text-decoration: none;
			border-bottom: 1.5px solid #d6d6d6;
			color: black;
			display: inline-flex;
			align-items: center;
			width: -moz-fit-content;
			width: fit-content;
			position: relative;

			&:hover {
				text-decoration-color: black;
  				border-color: black;
			}

			& > ion-icon {
				margin-right: 4px;
			}
		}

		.text-box-column {
			display: flex;
			flex-direction: column;
			gap: 4px;
		}

		input[type='text'] {
			width: 100%;

			&.no-width-100 {
				width: unset;
			}
		}

		/* special text options for content */
		.selectable * {
			-webkit-user-select: auto;
			user-select: auto;

			&::selection {
				color: white;
				background-color: var(--highlight);
			}
		}

		.scrollable {
			overflow: scroll;
			scrollbar-width: thin;
		}

		.columns-2 {
			display: flex;

			& > column {
				flex: 50%;
			}
		}

		.columns-3 {
			.columns-2();

			& > .column {
				flex: 33.3%;
			}
		}
	}
	// TODO need to figure out if there is a way to not have this be like this
	&:has(.options):not(.no-options-padding) > .content {
		padding-bottom: 64px;
	}

	&.no-padding > .content {
		padding: 0 !important;
	}
}

/*
.window > .titlebar::after {
  content: '';
  display: table;
  clear: both;
}
*/

/* form options */
input {
	accent-color: var(--accent);
}

.switch {
	position: relative;
	display: inline-block;
	width: 2rem;
	height: 1rem;

	& > input[type='checkbox'] {
		opacity: 0;
		width: 0;
		height: 0;

		&:checked + .slider {
			background-color: var(--accent);
			box-shadow: none;
		}

		&:focus + .slider {
			box-shadow: 0 0 1px var(--accent);
		}

		&:checked + .slider::before {
			transform: translateX(1rem);
			box-shadow: none;
		}
	}
}

.slider {
	position: absolute;
	cursor: pointer;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	border: 1px solid rgba(0 0 0 / 25%);
	box-shadow: inset 0 0 5px #ccc;
	transition: 100ms;
	border-radius: 1rem;

	&::before {
		content: '';
		position: absolute;
		height: calc(1rem - 8px);
		width: calc(1rem - 8px);
		left: 4px;
		bottom: 4px;
		background-color: white;
		box-shadow: 0 0 5px #555;
		transition: 100ms;
		border-radius: 50%;
	}
}

input[type='text'] {
	border-radius: 4px;
	padding: 4px;
	width: 100%;
	border: 1px solid rgba(0 0 0 / 25%);
	transition: 100ms ease-out;
	outline: none;

	&:focus {
		box-shadow: inset 0 0 5px rgba(0 0 0 / 15%);
	}
}

button,
input[type='button'] {
	border-radius: 4px;
	background-color: white;
	border: 1px solid rgba(0 0 0 / 25%);
	padding: 4px;
	transition: 100ms ease-out;
	display: inline-flex;
	flex-direction: row;
	gap: 4px;
	align-items: center;
	justify-content: center;
	min-width: 4rem;
	/* background-image: linear-gradient(transparent, rgba(0, 0, 0, 0.05) 40%, rgba(0, 0, 0, 0.10)); */

	&:hover {
		background-color: rgba(255 255 255 / 75%);
		border-color: var(--accent);
	}

	&:active {
		box-shadow: inset 0 0 5px rgba(0 0 0 / 15%);
	}
}

button.new {
	all: initial;
	font-family: var(--fontselection);
	margin: 0;
	box-sizing: border-box;
	-webkit-user-select: none;
	user-select: none;
	font-size: 1rem;

	border-radius: 4px;
	background: white;
	border: 1px solid rgba(0 0 0 / 25%);
	border-bottom-width: 2px;
	padding: 4px;
	display: inline-flex;
	flex-direction: row;
	gap: 4px;
	align-items: center;
	justify-content: center;

	&:hover {
		border-color: var(--accent);
	}

	&:active {
		border-color: var(--accent);
		border-bottom-width: 1px;
		background:
			linear-gradient(rgba(255 255 255 / 75%), rgba(255 255 255 / 75%)) no-repeat,
			linear-gradient(var(--accent), var(--accent)) no-repeat;
	}
}

/*
.window > .content .select-wrapper {
	font-size: 13px;
	padding: 10px 8px 10px 14px;
	background: #fff;
	border: 1px solid #ccc;
	border-radius: 6px;
	overflow: hidden;
	position: relative;
}

.window > .content .select-wrapper > .select {
	width: 120%;
	background: url('/img/arrow.png') no-repeat;
	background-position: 80% center;
}

.window > .content .select-wrapper > .select > select {
	background: transparent;
	line-height: 1;
	border: 0;
	padding: 0;
	border-radius: 0;
	width: 120%;
	position: relative;
	z-index: 10;
	font-size: 1em;
}
*/

select {
	border-radius: 4px;
	background-color: white;
	border: 1px solid rgba(0 0 0 / 25%);
	padding: 4px;
	transition: 100ms ease-out;
	display: inline-flex;
	flex-direction: row;
	gap: 4px;
	align-items: center;
	justify-content: center;

	&:hover {
		background-color: rgba(255 255 255 / 75%);
	}

	&:focus {
		box-shadow: inset 0 0 5px #ccc;
	}
}


/* options */
.window > .options {
	position: absolute;
	bottom: 0;
	background-color: #f0f0f0;
	width: 100%;
	display: flex;
	flex-direction: row;
	justify-content: right;
	padding: 4px;
	gap: 4px;
}
